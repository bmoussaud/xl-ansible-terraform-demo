---
apiVersion: xl-release/v1
kind: Templates
spec:
- directory: Cloud Infrastructure
  children:
  - directory: ITSM
  - template: Provisioning a new Cloud Infrastructure AWS
    description: '# Template Provisioning a new Cloud Infrastructure  in AWS'
    scheduledStartDate: 2019-08-08T09:00:00+02:00
    dueDate: 2020-04-28T12:01:06.672+02:00
    phases:
    - phase: DATA COLLECTION
      tasks:
      - name: Configuration of the new cloud infrastructure
        type: xlrelease.UserInputTask
        description: "## Data for the creation of the infrastructure\nYou must provide\
          \ a series of data to be able to provision the infrastructure on AWS. \n\
          \n* It will be necessary to provide the following information"
        team: Requester
        variables:
        - aws_region
        - environment
        - instance_type
        - project_name
      - name: Check of the existence of infrastructure project for ${project_name}
        type: xld.DoesCIExist
        server: XL Deploy
        ciID: Applications/cloud-infrastructure-${project_name}
        throwOnFail: true
        description: |-
          ## Verification of existence of infrastructure project for ${project_name}

          It will be the project with the Terraform templates that will be in charge of provisioning the infrastructure.
        team: Executor
      - name: Obtaining the versions available for the infrastructure creation of
          the ${project_name} project
        type: xld.GetAllVersions
        server: XL Deploy
        applicationId: Applications/cloud-infrastructure-${project_name}
        description: '## Obtaining the versions available for the infrastructure creation
          of the ${project_name} project'
        team: Executor
        variableMapping:
          pythonScript.packageIds: ${versions_infrastructure_availables}
      - name: Selection of infrastructure version
        type: xlrelease.UserInputTask
        description: "## Selection of the infrastructure version\nYou need to provide\
          \ the version of the infrastructure you want to apply. Once selected, there\
          \ will be:\n\n* Resources created in the region : ${aws_region} \n* Instances\
          \ of type  ${instance_type} \n* Type environment : ${environment} \n* For\
          \ the project  ${project_name}"
        team: Requester
        variables:
        - version_infrastructure_selected
      color: '#0099CC'
    - phase: ENVIRONMENT CREATION
      tasks:
      - name: Creation of the configuration item in XLD
        type: devopsascode.Apply
        server: XL Deploy
        content: |-
          ---
          apiVersion: xl-deploy/v1
          kind: Infrastructure
          spec:
          - name: !format "Infrastructure/terraform-cloud/%project_name%.%environment%"
            type: terraformEnterprise.AwsProvider
            accessSecret: !value "aws_secret_access_key"
            accessKey: !value "aws_access_key_id"
            defaultRegion: !value aws_region
          ---
          apiVersion: xl-deploy/v1
          kind: Environments
          spec:
            - directory: !format Environments/%project_name%
              children:
                - name: !format "%project_name%.%environment%"
                  type: udm.Environment
                  members:
                    - !format "Infrastructure/terraform-cloud/%project_name%.%environment%"
                  dictionaries:
                    - !format "Environments/%project_name%/config.%environment%"
                - name: !format "config.%environment%"
                  type: udm.Dictionary
                  entries:
                    aws_region: !value aws_region
                    env: !value environment
                    instance_type: !value instance_type
                    database_name: petportal_{{env}}_db
                    database_username: petclinic{{env}}
                    TITLE: Welcome {{env}}
                  encryptedEntries:
                    database_password: scott00tiger
                    database_root_password: scottRoot2020CoronaVirus
        values:
          instance_type: ${instance_type}
          project_name: ${project_name}
          aws_region: ${aws_region}
          environment: ${environment}
        description: Define the new CI in XLDeploy
        team: Executor
      - name: Validation of the environment in XLD
        type: xlrelease.Task
        description: "### Necessary resources ready for infrastructure deployment\n\
          The following information has been provided for the creation of new infrastructure:\n\
          \n1. _Environment_ ${environment}\n2. _Project:_ ${project_name}\n3. _AWS\
          \ Region:_  ${aws_region}\n4. _Type of instances:_ ${instance_type}\n\n\
          ### deployment environment\nThe environment necessary to deploy has been\
          \ created in XL Deploy.\n\n#### Name of the deployment environment:\n* Infrastructure/terraform-cloud/${project_name}.${environment}\n\
          * Environments/${project_name}/${project_name}.${environment}\n* Environments/${project_name}/config.${environment}\n\
          * Environments/${project_name} \n\n### Validate that the resources have\
          \ been created correctly in XLD"
        team: Requester
      - name: Validation of application and approval of the security team
        type: xlrelease.GateTask
        description: "### Necessary resources ready for infrastructure deployment\n\
          The following information has been provided for the creation of new infrastructure:\n\
          \n1. _Environment_ ${environment}\n2. _Project:_ ${project_name}\n3. _AWS\
          \ Region:_  ${aws_region}\n4. _Type of instances:_ ${instance_type}\n\n\
          ### deployment environment\nThe environment necessary to deploy has been\
          \ created in XL Deploy.\n\n#### Name of the deployment environment:\n* Infrastructure/terraform-cloud/${project_name}.${environment}\n\
          * CI Environments/${project_name}/${project_name}.${environment}\n* Environments/${project_name}/config.${environment}\n\
          * Environments/${project_name} \n\n### Validate that the resources have\
          \ been created correctly in XLD"
        team: Security Team
        precondition: '"${environment}" == "prod"'
      color: '#00875A'
    - phase: INFRASTRUCTURE CREATION
      tasks:
      - name: Creation of the infrastructure in AWS
        type: xldeploy.Deploy
        server: XL Deploy
        deploymentPackage: ${version_infrastructure_selected}
        deploymentEnvironment: Environments/${project_name}/${project_name}.${environment}
        team: Executor
      - name: Lookup of the IP addresses
        type: xlrelease.ParallelGroup
        tasks:
        - name: IP front ${ip_front}
          type: xld.GetCIStringProperty
          server: XL Deploy
          ciID: Infrastructure/${project_name}-${environment}-front
          ciPropertyName: address
          variableMapping:
            pythonScript.ciPropertyValue: ${ip_front}
        - name: IP Database ${ip_bdd}
          type: xld.GetCIStringProperty
          server: XL Deploy
          ciID: Infrastructure/${project_name}-${environment}-bdd
          ciPropertyName: address
          variableMapping:
            pythonScript.ciPropertyValue: ${ip_bdd}
      color: '#CC4A3C'
    - phase: INFRASTRUCTURE PROVISIONING
      tasks:
      - name: Obtaining the versions available for the provisioning of the ${project_name}
          project
        type: xld.GetAllVersions
        server: XL Deploy
        applicationId: Applications/provision-infrastructure-${project_name}
        description: |-
          ## Obtención de las versiones disponibles para ${project_name}

          Obtendremos un listado con las **distintas versiones de infraestructura disponibles** para el proyecto ${project_name}
        team: Executor
        variableMapping:
          pythonScript.packageIds: ${versions_provisioning_availables}
      - name: Selection of infrastructure version
        type: xlrelease.UserInputTask
        description: "## Selection of infrastructure version\nYou need to provide\
          \ the version of the provisioning rules you want to apply. \n* Resources\
          \ created in the region :${aws_region} \n* Instances of type  ${instance_type}\
          \ \n* Type environment : ${environment} \n* For the project  ${project_name}"
        team: Requester
        variables:
        - version_provisioning_selected
      - name: Provisioning of the infrastructure in AWS
        type: xldeploy.Deploy
        server: XL Deploy
        deploymentPackage: ${version_provisioning_selected}
        deploymentEnvironment: Environments/${project_name}/${project_name}.${environment}
        team: Executor
      color: '#FFAB00'
    variables:
    - type: xlrelease.StringVariable
      key: aws_region
      showOnReleaseStart: false
      label: AWS Region
      description: Región de AWS en la que se crearán los recursos y la infraestructura
      valueProvider:
        type: xlrelease.ListOfStringValueProviderConfiguration
        values:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - eu-west-1
        - eu-west-2
        - eu-west-3
      value: eu-west-3
    - type: xlrelease.StringVariable
      key: environment
      label: Environment
      description: Environment object of the infrastructure request
      valueProvider:
        type: xlrelease.ListOfStringValueProviderConfiguration
        values:
        - dev
        - test
        - prod
      value: prod
    - type: xlrelease.StringVariable
      key: instance_type
      requiresValue: false
      showOnReleaseStart: false
      label: EC2 Instance Type
      description: Type of the EC2 instances to be created. For productive environments,
        higher capacity instances are recommended.
      valueProvider:
        type: xlrelease.ListOfStringValueProviderConfiguration
        values:
        - t2.nano
        - t2.micro
        - t2.small
        - t2.medium
        - t2.large
        - t2.xlarge
        - t2.2xlarge
      value: t2.micro
    - type: xlrelease.StringVariable
      key: project_name
      label: Project Name
      description: Name of the project to create. An application of the same name
        must exist in XL Deploy under Applications / Infrastructures / Terraform
      value: petportal
    - type: xlrelease.ListStringVariable
      key: versions_infrastructure_availables
      requiresValue: false
      showOnReleaseStart: false
      label: available Infrastructure versions
      description: available Infrastructure versions
    - type: xlrelease.StringVariable
      key: version_infrastructure_selected
      requiresValue: false
      showOnReleaseStart: false
      label: Selected infrastructure version
      valueProvider:
        type: xlrelease.ListOfStringValueProviderConfiguration
        variableMapping:
          values: ${versions_infrastructure_availables}
    - type: xlrelease.ListStringVariable
      key: versions_provisioning_availables
      requiresValue: false
      showOnReleaseStart: false
      description: versions_provisioning_availables
    - type: xlrelease.StringVariable
      key: version_provisioning_selected
      requiresValue: false
      showOnReleaseStart: false
      label: Version of the Ansible playbook for provisioning
      valueProvider:
        type: xlrelease.ListOfStringValueProviderConfiguration
        variableMapping:
          values: ${versions_provisioning_availables}
    - type: xlrelease.StringVariable
      key: ip_front
      requiresValue: false
      showOnReleaseStart: false
      label: Front IP address
      description: IP provided by the EC2 instance created in AWS
    - type: xlrelease.StringVariable
      key: ip_bdd
      requiresValue: false
      showOnReleaseStart: false
      label: Database IP address
      description: IP provided by the EC2 instance created in AWS
    scriptUsername: admin
    scriptUserPassword: !value "xlrelease_Release_Provisioning_a_new_Cloud_Infrastructure_AWS_scriptUserPassword"
    riskProfile: Default risk profile
